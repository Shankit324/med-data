name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Setup Environment Variables
        run: |
          echo "NEXT_PUBLIC_YOUR_DEPLOYED_CONTRACT_ADDRESS=${{ secrets.NEXT_PUBLIC_YOUR_DEPLOYED_CONTRACT_ADDRESS }}" >> .env.local
          echo "NEXT_PUBLIC_PINATA_API_KEY=${{ secrets.NEXT_PUBLIC_PINATA_API_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_PINATA_SECRET=${{ secrets.NEXT_PUBLIC_PINATA_SECRET }}" >> .env.local
          echo "NEXT_PUBLIC_PINATA_JWT=${{ secrets.NEXT_PUBLIC_PINATA_JWT }}" >> .env.local
          echo "NEXT_PUBLIC_GATEWAY_URL=${{ secrets.NEXT_PUBLIC_GATEWAY_URL }}" >> .env.local

          echo "TURSO_CONNECTION_URL=${{ secrets.TURSO_CONNECTION_URL }}" >> .env
          echo "TURSO_AUTH_TOKEN=${{ secrets.TURSO_AUTH_TOKEN }}" >> .env
          echo "ALCHEMY_API_URL=${{ secrets.ALCHEMY_API_URL }}" >> .env
          echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> .env
          echo "ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }}" >> .env

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm run test

      - name: Build Next.js Project
        run: npm run build

      - name: Cache Next.js Build
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ github.sha }}
          restore-keys: |
              ${{ runner.os }}-nextjs-

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Setup Environment Variables
        run: |
          echo "NEXT_PUBLIC_YOUR_DEPLOYED_CONTRACT_ADDRESS=${{ secrets.NEXT_PUBLIC_YOUR_DEPLOYED_CONTRACT_ADDRESS }}" >> .env.local
          echo "NEXT_PUBLIC_PINATA_API_KEY=${{ secrets.NEXT_PUBLIC_PINATA_API_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_PINATA_SECRET=${{ secrets.NEXT_PUBLIC_PINATA_SECRET }}" >> .env.local
          echo "NEXT_PUBLIC_PINATA_JWT=${{ secrets.NEXT_PUBLIC_PINATA_JWT }}" >> .env.local
          echo "NEXT_PUBLIC_GATEWAY_URL=${{ secrets.NEXT_PUBLIC_GATEWAY_URL }}" >> .env.local

          echo "TURSO_CONNECTION_URL=${{ secrets.TURSO_CONNECTION_URL }}" >> .env
          echo "TURSO_AUTH_TOKEN=${{ secrets.TURSO_AUTH_TOKEN }}" >> .env
          echo "ALCHEMY_API_URL=${{ secrets.ALCHEMY_API_URL }}" >> .env
          echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> .env
          echo "ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }}" >> .env

      - name: Install Dependencies
        run: npm install

      - name: Deploy to Vercel
        run: npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes

      - name: Deploy Smart Contracts
        run: |
          npm run compile
          npx hardhat run scripts/deploy.js --network sepolia
